---
AWSTemplateFormatVersion: 2010-09-09
Description: Creates some resources to deploy Simian Army

Properties:

  FQDN:
    Type: String
    Default: simian-army.randall-it.uk
    Description: DNS name to create for the Simian Army server

  ImageId:
    Type: String
    Description: ImageId to use for the Simian Army server

  InstanceType:
    Type: String
    Default: t2.micro
    Description: InstanceType to use for the Simian Army server

  HostedZoneId:
    Type: String
    Default: Z35V1WYGMHE3VE
    Description: Route 53 hosted zone in which to create the Simian Army record

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: dave
    Description: KeyName to use for the Simian Army server

  PublicIpAddress:
    Type: String
    Description: Public IP address that the Simian Army server will be accessible from

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: The subnet in which to launch the Simian Army server

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: A VPC in which to create resources

Resources:

  # Define what the monkeys can do
  SimianPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2:CreateTags
              - ec2:DeleteSnapshot
              - ec2:DescribeImages
              - ec2:DescribeInstances
              - ec2:DescribeSnapshots
              - ec2:DescribeVolumes
              - ec2:TerminateInstances
              - ses:SendEmail
              - elasticloadbalancing:*
              - autoscaling:DeleteAutoScalingGroup
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeAutoScalingInstances
              - autoscaling:DescribeLaunchConfigurations
              - sdb:BatchDeleteAttributes
              - sdb:BatchPutAttributes
              - sdb:DomainMetadata
              - sdb:GetAttributes
              - sdb:PutAttributes
              - sdb:ListDomains
              - sdb:CreateDomain
              - sdb:Select
            Effect: Allow
            Resource: "*"
        Version: 2012-10-17
      PolicyName: "simian-policy"
      Roles:
        - !Ref SimianRole

  # Role for the monkeys to assume
  SimianRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service: "ec2.amazonaws.com"
        Version: 2012-10-17
      Path: "/"

  # Instance profile to allow the monkeys to assume the role
  SimianProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: SimianRole
    Properties:
      Roles:
        - !Ref SimianRole

  # Security group to restrict traffic to the Simian Army instances
  SimianSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows access to the Simian Army server from Randall IT
      SecurityGroupIngress:
        - CidrIp: !Join ["", [!Ref PublicIpAddress, "/32"]]
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      Tags:
        - Key: Name
          Value: randall-it-private-simian
      VpcId: !Ref VpcId

  # Instance to run the Simian Army on
  SimianInstance:
    Type: AWS::EC2::Instance
    Properties:
      AssociatePublicIpAddress: True
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            DeleteOnTermination: True
            VolumeSize: 8
            VolumeType: gp2
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref SimianSecurityGroup
      UserData:
        Fn::Base64: !Join
          - "\n"
          - - "#!/bin/bash"
            - "yum install -y epel-release"
            - "yum install -y python-pip wget rubygems"
            - "pip install awscli"
            - "wget https://packages.chef.io/files/stable/chef/12.18.31/el/7/chef-12.18.31-1.el7.x86_64.rpm"
            - "rpm -Uvh chef-12.18.31-1.el7.x86_64.rpm"
            - "mkdir /etc/chef"
            - !Join ["", ["aws s3 cp s3://", !ImportValue "chef-bucket", "/validator.pem /etc/chef/validator.pem"]]
            - !Join ["", ["aws s3 cp s3://", !ImportValue "chef-bucket", "/client.rb /etc/chef/client.rb"]]
            - !Join ["", ["aws s3 cp s3://", !ImportValue "chef-bucket", "/bamboo-record.json ~"]]
            - "echo '{\"run_list\": [\"role[simian-army]\"]}' > /opt/chef/client-config.json"
            - "chef-client -j /opt/chef/client-config.json"
            - "rm ~/* -f"
